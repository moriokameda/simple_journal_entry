/*
 * This file is generated by jOOQ.
 */
package com.okeicalm.simpleJournalEntry.infra.db.tables.records


import com.okeicalm.simpleJournalEntry.infra.db.tables.Comics

import java.time.LocalDateTime

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class ComicsRecord() : UpdatableRecordImpl<ComicsRecord>(Comics.COMICS), Record5<Long?, String?, Boolean?, LocalDateTime?, LocalDateTime?> {

    var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    @set:JvmName("setIsPublished")
    var isPublished: Boolean?
        set(value): Unit = set(2, value)
        get(): Boolean? = get(2) as Boolean?

    var createdAt: LocalDateTime?
        set(value): Unit = set(3, value)
        get(): LocalDateTime? = get(3) as LocalDateTime?

    var updatedAt: LocalDateTime?
        set(value): Unit = set(4, value)
        get(): LocalDateTime? = get(4) as LocalDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<Long?, String?, Boolean?, LocalDateTime?, LocalDateTime?> = super.fieldsRow() as Row5<Long?, String?, Boolean?, LocalDateTime?, LocalDateTime?>
    override fun valuesRow(): Row5<Long?, String?, Boolean?, LocalDateTime?, LocalDateTime?> = super.valuesRow() as Row5<Long?, String?, Boolean?, LocalDateTime?, LocalDateTime?>
    override fun field1(): Field<Long?> = Comics.COMICS.ID
    override fun field2(): Field<String?> = Comics.COMICS.NAME
    override fun field3(): Field<Boolean?> = Comics.COMICS.IS_PUBLISHED
    override fun field4(): Field<LocalDateTime?> = Comics.COMICS.CREATED_AT
    override fun field5(): Field<LocalDateTime?> = Comics.COMICS.UPDATED_AT
    override fun component1(): Long? = id
    override fun component2(): String? = name
    override fun component3(): Boolean? = isPublished
    override fun component4(): LocalDateTime? = createdAt
    override fun component5(): LocalDateTime? = updatedAt
    override fun value1(): Long? = id
    override fun value2(): String? = name
    override fun value3(): Boolean? = isPublished
    override fun value4(): LocalDateTime? = createdAt
    override fun value5(): LocalDateTime? = updatedAt

    override fun value1(value: Long?): ComicsRecord {
        this.id = value
        return this
    }

    override fun value2(value: String?): ComicsRecord {
        this.name = value
        return this
    }

    override fun value3(value: Boolean?): ComicsRecord {
        this.isPublished = value
        return this
    }

    override fun value4(value: LocalDateTime?): ComicsRecord {
        this.createdAt = value
        return this
    }

    override fun value5(value: LocalDateTime?): ComicsRecord {
        this.updatedAt = value
        return this
    }

    override fun values(value1: Long?, value2: String?, value3: Boolean?, value4: LocalDateTime?, value5: LocalDateTime?): ComicsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised ComicsRecord
     */
    constructor(id: Long? = null, name: String? = null, isPublished: Boolean? = null, createdAt: LocalDateTime? = null, updatedAt: LocalDateTime? = null): this() {
        this.id = id
        this.name = name
        this.isPublished = isPublished
        this.createdAt = createdAt
        this.updatedAt = updatedAt
    }
}
